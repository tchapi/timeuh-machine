# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
    - { resource: "services/excludes.yml" }

parameters:
    ga_tracker_id: "%env(GA_TRACKER_ID)%"
    tracks_per_page: 20
    track_endpoint: 'http://ilaster.radiomeuh.com/mediabox/api/v0/gettrack_json.php'
    website_link: 'https://www.radiomeuh.com'
    player_link: 'https://www.radiomeuh.com'
    bot_link: 'http://t.me/RadioMeuhBot'
    tuneefy_track_endpoint: 'https://data.tuneefy.com/v2/aggregate/track?limit=1&aggressive&q=%s'
    tuneefy_share_endpoint: 'https://data.tuneefy.com/v2/share/%s'
    tuneefy_token: "%env(TUNEEFY_TOKEN)%"
    spotify_client_id: "%env(SPOTIFY_CLIENT_ID)%"
    spotify_client_secret: "%env(SPOTIFY_CLIENT_SECRET)%"
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\ApiService: 
        calls:
            - [setParameterBag, ["@=service('kernel').getContainer().getParameterBag()"]]
    
    App\Repository\TrackRepository:
        factory: ['@doctrine.orm.entity_manager', 'getRepository']
        arguments: ['App\Entity\Track']